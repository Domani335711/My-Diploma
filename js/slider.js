// Слайдер начало
// Сначала будем хватать элементы, с которыми будем работать. Первым делом создам константы. Здесь переменные будут константы, т.к. элементы у нас уже есть, они никак не изменяются (ни цифры, ни стрелочки)
const slides = document.querySelectorAll('.offer__slide'), // хватает все слайды (т.к. класс, то ставим .)
prev = document.querySelector('.offer__slide-prev'), // хватает стрелочку назад (влево)
next = document.querySelector('.offer__slide-next'), // хватает стрелочку вперед (вправо)
current = document.querySelector('#current'), // если есть нумерация слайдов. хватает какой сейчас слайд открыт ((т.к. идентификатор, то ставим #)название идентификатора current и переменную назовем current)
total = document.querySelector('#total'); // если есть нумерация слайдов, то появляются переменные current и total. хватает сколько всего слайдов (название идентификатора total и переменную назовем total)
// Схватили стрелочки, какой элемент открыт и сколько их всего, но есть проблема: когда начнем работать, то первый слайд будет не 01, а 02, т.к. когда хватаем множество элементов, они схватываются в массив и индексация у них идет с 0, а нам надо, чтобы индексация начиналась с цифры 1(т.к. 1-й слайд, 2-й..., а не 0-й, 1-й...). Поэтому надо создать переменную let, которая все время будет изменяться:
let slideIndex = 1; // т.к. работаем с индексацией, то назовем slideIndex и укажем, что он начнется с 1

// Раньше скрывали все элементы, которые не нужны, а потом показывали все элементы, которые нам нужны в какой-то момент так, как это делали с табами. Здесь можно немного поиграть и написать все в одной функции (показ слайдов). Она будет работать, как при переключении слайдов и т.д.:
function showSlides(n){
// Когда нажимаем на стрелки влево-вправо, слайды надо запустить по кругу (перед первым при нажатии на стрелку влево появится последний (1,4,3,2,1...), после последнего при нажатии на стрелку вправо - первый (4,1,2,3,4...)). Поэтому, чтобы эти стрелочки правильно сработали, добавим в функцию function showSlides() параметр n (он м.б. любой). И сразу после function showSlides(n) напишем условие (2)
if(n>slides.length){  // (2) Если n>длины массива (slides.length) (т.е., например, n=4, slides.length тоже =4, тогда перевернет на 1 слайд, а не на 5-й, которого нет), то
    slideIndex=1;  // будет принимать значение 1. Т.е. в n будет поступать, какой сейчас элемент массива включен (slideIndex показывает, какой номер слайда открыт)
}
if(n<1){  // как только дойдем до 1-го элемента слайдера и перелистнем еще раз назад, то он поймет, что всего 4 элемента и последний элемент он нам откроет
    slideIndex = slides.length;
}
// Если в макете есть нумерация слайдов и счетчик идет 01,02..., то 0 надо добавить, но в программировании нет таких чисел 01,02... Есть 1,2,3... Поэтому должны заставить добавляться этот 0 перед цифрой. Для этого надо написать несколько условий:
if(slides.length<10){  // Если длина массива < 10 (т.е. слайдов < 10: с 1 по 9), то
    total.textContent=`0${slides.length}`; // total показывает, какой количество слайдов есть. Когда будешь менять значения, добавь ему ноль (в переменной total будем менять текстовое значение textContent (обратные ковычки ё в англ``) и добавлять 0
}else{ // В противном случае (если элементов больше, то, сколько элементов есть, столько и пишем (ничего не добавляя)
    total.textContent = slides.length;
}
// Нумерация, которая сама будет меняться, будем работать со slideIndex, т.к.slideIndex и будет указывать, какой номер слайда сейчас открыт.
if(slideIndex<10){ // для текущего слайда. current показывает, какой слайд нажат
    current.textContent = `0${slideIndex}`;
}else{ // В противном случае, если все-таки элементов от 10 и >, то
    current.textContent = slideIndex;
} //(Т.е. позаботились о том, что если мы вдруг дойдем до 4-го слайда, то при нажатии справа снова начнется с 1-го слайда, а при нажатии влево от 1-го слайда - начнется с 4-го. Также теперь будут 0 перед номером слайда, если номер <10)

// Если slideIndex<10 (т.е. тот, который открыт),
    // нужно скрыть все элементы, которые не нужны, и показать тот 1-й элемент, который нужен до того момента, когда начнем стрикать (переключать слайды)
slides.forEach(item => item.style.display = "none"); // чтобы убрать, обращаемся ко всем слайдам slides, потом вызываем метод forEach для перебора; далее называем каждый элемент не 0,1,2..., а задаем им одинаковые имена, например, item; стрелочная функция; говорим, что залезаем в каждый item в стили style и говорим всем, чтобы они все скрылись display = "none"
// slides[0].style.display = "block";   // (1). Показать нулевой элемент slides[0] ( [какой номер элемента я хочу показать] ), заходим в стили и ставим display = "block", т.к. в index в offer-slide у 1-го элемента стоит block, а у всех остальных стоит none, чтобы первый показался, а остальные исчезли. Но правильнее было бы сделать по-другому, т.к. будем стрикать вправо/влево элементы и значение будет все время меняться. Надо сделать так, чтобы элемент потом в [] показывался по очереди: есть slideIndex ставим его вместо 0 в []. Изначально, чтобы появился 1-й элемент массива, как превратить из 1 (slideIndex изначально имеет 1) в 0. Надо сделать 1-1, т.е. slideIndex-1. Потом это значение будет меняться и этот - тоже будет меняться на +
slides[slideIndex-1].style.display = "block";
}
// теперь сразу эту функцию вызовем
showSlides(slideIndex); // (3) все слайды пропали (в браузере). Теперь надо показать самый первый слайд (1):
// Теперь остается заставить кнопки работать. Для этого мы активировали n-ый элемент. Этот параметр n будет показывать, какой элемент сейчас открыт и slideIndex и будет туда заноситься данные, какой сейчас слайд открыт. Значит, переменную n заменяем на slideIndex в строке (3). И говорим, что работаем со slideIndex и за счет этого будут меняться числа (открытого слайда)

// Теперь необходимо написать функцию, которая будет отвечать за нажатие на стрелку вправо - слайды будут увеличиваться, а при нажатии на стрелку влево - уменьшаться на 1:
function plusSlide(n){ // Назовем функцию plusSlide, можно было бы еще создать и функцию minusSlide (назад), но обойдем это и напишем красиво. Опять вводим параметр n 
showSlides(slideIndex+=n); // Я вызываю функцию showSlides, используя вместо параметра n, который здесь указан данную структуру. += означает slideIndex = slideIndex + n, т.е. slideIndex изначально 1. Код читается сверху вниз, но справа налево, т.е. slideIndex(=1) + n (например, тоже =1) =1+1=2, т.е. slideIndex будет иметь положение 2
} // Т.е. написали функцию, которая будет работать следующим образом: при нажатии Next будет +1,+1,+1..., а когда будем нажимать кнопку prev будет -1,-1,-1

//Напишем функцию сначала с кнопкой next: берем кнопку next и добавляем событие addEventListener, будем на нее нажимать ('click'), говорим, что это будет стрелочная функция ()=>{} и пишем, что вызываем функцию plus Slide и указываем значение 1, т.е. вместо n будет становиться 1 и в формулу выше вместо n ставиться 1, т.е slideIndex(=1) + n (=1) =1+1=2; если slideIndex(2) + n (=1) =2+1=3;...
next.addEventListener('click', ()=>{ // листаем вперед на 1 слайд
plusSlide(1);
})
prev.addEventListener('click', ()=>{ // листаем назад на 1 слайд
plusSlide(-1);
})